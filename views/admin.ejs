<!DOCTYPE html>
<html>

<head>
  <title>Admin Page</title>
  <style>
    body {
      background-color: #fff;
      /* 배경색은 흰색(#fff)로 설정 */
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .neon-sign-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 20px;
    }

    .neon-sign {
      /* border: 4px solid #ff0; */
      border: 0px;
      border-radius: 15px;
      padding: 10px;
      width: 400px;
      height: 80px;
      overflow: hidden;
      background-color: #000000;
      /* 테두리 안의 배경색을 차콜색(#444)으로 설정 */
      display: flex;
      /* 추가: flex 컨테이너로 설정 */
      justify-content: flex-end;
      /* 수정: 가로 방향 오른쪽 정렬 */
      align-items: center;
      /* 추가: 세로 방향 가운데 정렬 */
    }

    /* .neon-sign .neon-text {
      white-space: nowrap;
      font-size: 3em;
      font-family: 'Shadows Into Light', cursive;
      color: #ffffff;
      -webkit-text-stroke: 2px #eb7a9f;
      text-shadow: 0 0 10px #eb7a9f, 0 0 20px #eb7a9f, 0 0 30px #eb7a9f, 0 0 40px #eb7a9f, 0 0 70px #eb7a9f, 0 0 80px #eb7a9f, 0 0 100px #eb7a9f, 0 0 150px #eb7a9f;
      animation: neon-animation 10s linear infinite;
    }

    .neon-sign .neon-text {
      white-space: nowrap;
      font-size: 3em;
      font-family: 'Shadows Into Light', cursive;
      color: transparent;
      -webkit-text-stroke: 2px #FFC107;
      text-shadow: 0 0 10px #FFC107, 0 0 20px #FFC107, 0 0 30px #FFC107, 0 0 40px #FFC107, 0 0 70px #FFC107, 0 0 80px #FFC107, 0 0 100px #FFC107, 0 0 150px #FFC107;
      animation: neon-animation 10s linear infinite;
    } */

    .neon-sign .neon-text {
      white-space: nowrap;
      font-size: 3em;
      font-family: 'Shadows Into Light', cursive;
      color: transparent;
      -webkit-text-stroke: 2px #f8efd7;
      text-shadow: 0 0 10px #edaae4, 0 0 20px #edaae4, 0 0 30px #edaae4, 0 0 40px #edaae4, 0 0 70px #edaae4;
      animation: neon-animation 10s linear infinite;
    }


    @keyframes neon-animation {
      0% {
        transform: translateX(100%);
      }

      100% {
        transform: translateX(-100%);
      }
    }
  </style>
  <link href="/css/digital-7.ttf" rel="stylesheet">
</head>

<body>
  <div class="neon-sign-container">
    <div class="neon-sign">
      <div class="neon-text">
        <%= songs.length> 0 ? songs[0] : '' %>
      </div>
    </div>
  </div>

  <div>
    <h2>Add a Song</h2>
    <form action="/admin" method="post">
      <input type="text" name="song" placeholder="Enter song name and artist" required>
      <button type="submit">Add Song</button>
    </form>

    <h2>Song List</h2>
    <ul id="song-list">
      <% songs.forEach((song, index)=> { %>
        <li data-song-id="<%= index %>">
          <%= song %>
            <form id="deleteForm<%= index %>" action="/admin/<%= index %>?_method=DELETE" method="post">
              <button type="submit" class="delete-button" data-index="<%= index %>">Delete</button>
            </form>
            <form id="upForm<%= index %>" action="/admin/<%= index %>/up" method="post">
              <input type="hidden" name="index" value="<%= index %>">
              <button type="submit" class="up-button" data-index="<%= index %>">Up</button>
            </form>
            <form id="downForm<%= index %>" action="/admin/<%= index %>/down" method="post">
              <input type="hidden" name="index" value="<%= index %>">
              <button type="submit" class="down-button" data-index="<%= index %>">Down</button>
            </form>
        </li>
        <% }); %>
    </ul>

  </div>

  <script>
    const deleteButtons = document.querySelectorAll('.delete-button');
    deleteButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const index = e.target.getAttribute('data-index');
        document.getElementById(`deleteForm${index}`).submit();
      });
    });

    const songList = document.getElementById("song-list");

    function moveSong(up, index) {
      const songList = document.getElementById('song-list');
      const song = songList.children[index];
      if ((up && index > 0) || (!up && index < songList.children.length - 1)) {
        const targetIndex = up ? index - 1 : index + 1;
        songList.removeChild(song);
        songList.insertBefore(song, songList.children[targetIndex]);
        const songIds = Array.from(songList.children).map(li => li.dataset.songId);
        updateSongOrder(songIds);
      }
    }

    const upButtons = document.querySelectorAll('.up-button');
    upButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const index = parseInt(e.target.getAttribute('data-index'));
        moveSong(true, index);
      });
    });

    const downButtons = document.querySelectorAll('.down-button');
    downButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        const index = parseInt(e.target.getAttribute('data-index'));
        moveSong(false, index);
      });
    });

    document.addEventListener('DOMContentLoaded', function () {
      initSortable();
    });

    function initSortable() {
      const songList = document.getElementById('song-list');

      new Sortable(songList, {
        handle: '.drag-handle',
        animation: 150,
        onEnd: function (event) {
          const songIds = Array.from(songList.children).map(li => li.dataset.songId);
          updateSongOrder(songIds);
        },
      });
    }

    function updateSongOrder(songIds) {
      // 서버로 AJAX 요청을 보냅니다.
      // 여기서는 jQuery 대신 fetch API를 사용합니다.
      fetch('/admin/updateOrder', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ songIds }),
      })
        .then(response => response.json())
        .then(data => {
          // 서버에서 응답을 받은 후 처리할 코드를 여기에 작성합니다.
          console.log(data); // 예: 서버에서 응답한 데이터를 콘솔에 출력
        })
        .catch(error => {
          console.error('Error:', error);
        });
    }

  </script>
</body>

</html>